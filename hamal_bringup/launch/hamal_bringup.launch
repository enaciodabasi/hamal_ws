<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <arg name="manual_enabled" default="false"></arg>

    <arg name="use_gmapping" default="false"></arg>
    <arg name="use_hector" default="false"></arg>
    <arg name="use_slam_toolbox" default="false"></arg>
    <arg name="mode" default="lifelong"></arg>
    <arg name="model" default="$(find hamal_description)/urdf/hamal.urdf.xacro"></arg>
    <arg name="map" default="altinay_test.yaml"></arg>

    <arg name="use_dwa_planner" default="true"></arg>

    <arg name="use_ekf" default="true"></arg>

    <arg name="joy_config" default="xbox" />
    <arg name="joy_dev" default="/dev/input/js0" />
    <arg name="config_filepath" default="$(find teleop_twist_joy)/config/$(arg joy_config).config.yaml" />
    <arg name="joy_topic" default="joy" />
    <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/>
    
    <node
        name="robot_state_publisher"
        pkg="robot_state_publisher"
        type="robot_state_publisher"
        respawn="false"
        output="screen"
    >
        <param name="publish_frequency" value="100.0"></param>
    </node>

    <include file="$(find hamal_hardware)/launch/hamal_hardware.launch"></include>    
    <include file="$(find hamal_control)/launch/hamal_control.launch"></include>

    <!-- <include file="$(find hamal_mapping)/launch/amr_mapping.launch">
        <group if="$(arg use_gmapping)">
            <arg name="use_gmapping" value="true"></arg>
          </group>
          <group if="$(arg use_hector)">
            <arg name="use_hector" value="true"></arg>
          </group>
          <group if="$(arg use_slam_toolbox)">
            <arg name="use_slam_toolbox" value="true"></arg>
            <arg name="mode" value="$(arg mode)"></arg>
          </group>
    </include> -->

    <include file="$(find hamal_mapping)/launch/scanners.launch"></include>    

    <group if="$(arg manual_enabled)">
        <param name="/hamal/mobile_base_controller/enable_odom_tf" value="true"></param>
        
        <group if="$(arg use_slam_toolbox)">
        <!-- <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)"></node> -->
        <!-- <include file="$(find hamal_mapping)/launch/slam_toolbox.launch">
          <arg name="$(arg mode)" value="true"></arg>
        </include> -->
        <node
          pkg="slam_toolbox"
          type="sync_slam_toolbox_node"
          name="slam_toolbox"
          output="screen">
          <rosparam command="load" file="$(find amr_mapping)/config/sbox_offline.yaml"></rosparam>
        </node>
        </group>

        <group if="$(arg use_gmapping)">
          <include file="$(find hamal_mapping)/launch/gmapping.launch"/>
        </group>

        <group if="$(arg use_hector)">
          <include file="$(find hamal_mapping)/launch/hector_mapping.launch"/>
        </group>

        

    </group>

    <group unless="$(arg manual_enabled)">
      <group if="$(arg use_ekf)">
        <param name="/hamal/mobile_base_controller/enable_odom_tf" value="false"></param>  
      </group>
      <group unless="$(arg use_ekf)">
        <param name="/hamal/mobile_base_controller/enable_odom_tf" value="true"></param>
      </group>
      <node 
        name="map_server"
        pkg="map_server" 
        type="map_server" 
        args="$(find hamal_mapping)/maps/$(arg map)"> 
      </node>

      <include file="$(find hamal_localization)/launch/localization.launch">
          <arg name="use_ekf" value="$(arg use_ekf)"></arg>
          <remap from="/odom" to="/odometry/filtered"></remap>
      </include>

      <include file="$(find hamal_navigation)/launch/hamal_navigation.launch">
        <arg name="use_dwa_planner" value="$(arg use_dwa_planner)"></arg>

        <arg name="use_ekf" value="$(arg use_ekf)"></arg>
        
        <remap from="/cmd_vel" to="/hamal/mobile_base_controller/cmd_vel"></remap>
      </include>    

    </group>

    <node
      name="dynamic_speed_limiter"
      pkg="hamal_utils"
      type="dynamic_speed_limiter"
      output="screen"
    >  
    </node>

</launch>